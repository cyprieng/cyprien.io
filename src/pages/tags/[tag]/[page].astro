---
import TagPosts from "@layouts/TagPosts.astro";
import { getPageNumbers, getPagination } from "@utils/getPagination";
import getPostsByTag from "@utils/getPostsByTag";
import getUniqueTags from "@utils/getUniqueTags";
import { getCollection } from "astro:content";
import type { AnyCollectionEntry } from "@utils/contentConfig";

export interface Props {
  post: AnyCollectionEntry;
  tag: string;
  tagName: string;
}

export async function getStaticPaths() {
  const posts = [
    ...(await getCollection("blog")),
    ...(await getCollection("projects")),
  ];

  const tags = getUniqueTags(posts);

  return tags.flatMap(({ tag, tagName }) => {
    const tagPosts = getPostsByTag(posts, tag);
    const totalPages = getPageNumbers(tagPosts.length);

    return totalPages.map((page) => ({
      params: { tag, page },
      props: { tag, tagName },
    }));
  });
}

const { page } = Astro.params;
const { tag, tagName } = Astro.props;

const posts = await getCollection("blog", ({ data }) => !data.draft);

const postsByTag = getPostsByTag(posts, tag);

const pagination = getPagination({
  posts: postsByTag,
  page,
});
---

<TagPosts {...pagination} {tag} {tagName} />
